name: Go Format and Lint

# Workflow Triggers
on:
  # Run on pull requests targeting the main branch
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go-format-lint.yml'
      - '.golangci.yml'
  # Run on pushes to main
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  # Allow manual triggering
  workflow_dispatch:

# Permissions
permissions:
  contents: write  # Needed for commits
  pull-requests: read  # Needed for golangci-lint on PRs

jobs:
  format-and-lint:
    name: Format and Lint Code
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Required for golangci-lint with only-new-issues on PRs
          fetch-depth: ${{ github.event_name == 'pull_request' && 0 || 1 }}

      # Step 2: Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      # Step 3: Auto-format Go code
      - name: Format Go Code
        id: gofmt
        run: |
          # Install goimports which handles both imports and formatting
          go install golang.org/x/tools/cmd/goimports@latest
          
          # Run goimports and capture if any changes were made
          goimports -local $(go list -m) -w $(find . -type f -name '*.go' | grep -v /vendor/)
          
          # Check if any files were changed
          if git diff --quiet --exit-code; then
            echo "No formatting changes needed."
            echo "format_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Code formatting applied."
            echo "format_changes=true" >> $GITHUB_OUTPUT
          fi

      # Step 4: Run golangci-lint
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          args: --config=.golangci.yml
          only-new-issues: ${{ github.event_name == 'pull_request' }}

      # Step 5: Commit formatting changes if any
      - name: Commit Formatting Changes
        if: steps.gofmt.outputs.format_changes == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Code Formatter Bot
          author_email: actions@github.com
          message: "style: apply Go code formatting"
          add: "*.go"