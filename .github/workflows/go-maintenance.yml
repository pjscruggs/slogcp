name: Go Project Maintenance

# Workflow Triggers
on:
  # Run weekly on Sundays at 4:00 UTC
  schedule:
    - cron: '0 4 * * 0'
  # Run on pull requests targeting the main branch, only if Go files or workflow files change
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go-maintenance.yml'
      - '.golangci.yml'
  # Allow manual triggering from the GitHub Actions UI
  workflow_dispatch:

# Permissions required by the jobs
permissions:
  contents: write # Needed for checkout and direct commits
  pull-requests: read # Needed for golangci-lint only-new-issues
  security-events: write # Needed for github/codeql-action/upload-sarif

jobs:
  # Job to coordinate all maintenance tasks
  maintenance:
    name: Coordinate Maintenance Tasks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for license dates
      
      # Call license header workflow to handle license notices
      - name: Update License Headers
        uses: ./.github/workflows/license-header.yml
      
      # Tests are a critical step - fail the workflow if they don't pass
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      
      - name: Run All Tests
        id: tests
        run: go test ./... -v
      
      # Run security scans and quality checks
      - name: Run Gosec Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        if: success() || failure() # Run even if gosec found issues
      
      - name: Run Govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-file: 'go.mod'
      
      # Update dependencies if this is a scheduled run or manual trigger
      - name: Update Dependencies
        id: update_deps
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          go get -u -t ./...
          go mod tidy
          
          # Check if go.mod or go.sum changed
          if git diff --quiet --exit-code go.mod go.sum; then
            echo "No dependency changes detected."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Dependency changes detected."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi
      
      # Re-run tests if dependencies were updated
      - name: Verify Tests After Update
        if: steps.update_deps.outputs.changes_detected == 'true'
        run: go test ./... -v
      
      # Directly commit dependency updates if tests pass
      - name: Commit Dependency Updates
        if: steps.update_deps.outputs.changes_detected == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Maintenance Bot
          author_email: actions@github.com
          message: "chore(deps): update Go module dependencies"
          add: "go.mod go.sum"