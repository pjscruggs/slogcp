name: Manual E2E Test Trigger

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to run E2E tests on'
        required: true
        type: string

permissions:
  checks: write
  contents: read
  pull-requests: read
  issues: write  # For PR comments

jobs:
  trigger_e2e:
    name: Manually Trigger E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify Authorization
        run: |
          # Check if actor is repository owner or in maintainers list
          if [[ "${{ github.actor }}" != "${{ github.repository_owner }}" ]]; then
            echo "❌ Unauthorized: Only repository maintainers can trigger E2E tests"
            exit 1
          fi
          echo "✅ Authorized maintainer: ${{ github.actor }}"
      
      - name: Get PR Information
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pr_number }}
            });
            
            core.setOutput('head_sha', pr.data.head.sha);
            core.setOutput('head_ref', pr.data.head.ref);
            core.setOutput('author', pr.data.user.login);
            
            console.log(`PR #${pr.data.number} by ${pr.data.user.login}`);
            console.log(`Head SHA: ${pr.data.head.sha}`);
            
            return pr.data;
      
      - name: Find and Update E2E Check Run
        id: update_check
        uses: actions/github-script@v7
        with:
          script: |
            const checkName = 'E2E Tests (GCP)';
            const sha = '${{ steps.pr_info.outputs.head_sha }}';
            
            // Find existing check run
            const checks = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: sha,
              check_name: checkName
            });
            
            let checkRunId;
            if (checks.data.total_count > 0) {
              checkRunId = checks.data.check_runs[0].id;
              
              // Update to in_progress
              await github.rest.checks.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                check_run_id: checkRunId,
                status: 'in_progress',
                started_at: new Date().toISOString(),
                output: {
                  title: `${checkName} - In Progress`,
                  summary: `E2E tests manually triggered by @${context.actor}`
                }
              });
            } else {
              // Create new check if none exists
              const { data: checkRun } = await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: checkName,
                head_sha: sha,
                status: 'in_progress',
                started_at: new Date().toISOString(),
                output: {
                  title: `${checkName} - In Progress`,
                  summary: `E2E tests manually triggered by @${context.actor}`
                }
              });
              checkRunId = checkRun.id;
            }
            
            core.setOutput('check_run_id', checkRunId);
      
      - name: Generate App Token for E2E Dispatch
        id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID_DISPATCH }}
          private-key: ${{ secrets.PRIVATE_KEY_DISPATCH }}
          owner: pjscruggs
          repositories: slogcp-test
      
      - name: Dispatch E2E Tests
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.app_token.outputs.token }}
          repository: pjscruggs/slogcp-test
          event-type: e2e-test
          client-payload: |
            {
              "lib_repo_full_name": "${{ github.repository }}",
              "pr_sha": "${{ steps.pr_info.outputs.head_sha }}",
              "pr_number": "${{ github.event.inputs.pr_number }}",
              "lib_run_id": "${{ github.run_id }}",
              "check_run_id": "${{ steps.update_check.outputs.check_run_id }}"
            }
      
      - name: Add PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.pr_number }},
              body: `🧪 E2E tests manually triggered by @${context.actor}\n\nView progress in the [E2E Tests (GCP) check](https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${{ github.event.inputs.pr_number }}/checks)`
            });